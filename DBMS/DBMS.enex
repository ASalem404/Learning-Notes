<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export4.dtd">
<en-export export-date="20231112T043524Z" application="Evernote" version="10.58.8">
  <note>
    <title>DBMS</title>
    <created>20230825T111526Z</created>
    <updated>20230825T121755Z</updated>
    <note-attributes>
      <author>Ahmed Salem</author>
    </note-attributes>
    <content>
      <![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div><br/></div><ul><li><div>Reading 64 bit in RAM require 100 ns but in SSD require 150,000 ns but in HDD require 10,000,000 ns</div></li></ul><div style="padding-left:40px;"><br/></div><ul><li><h2>Storage manager</h2></li><ul><li><div>Responsible for maintaining database files</div></li><li><div>organize the files as collections of pages</div></li><li><div>track read and write to these pages and available storage space.</div></li></ul></ul><div><br/></div><ul><li><h3>   <span style="font-size: 20px;">Page</span></h3></li><ul><li><div>Fixed size block of data</div></li><li><div>512B - 16KB</div></li><li><div>SQL Server, Postgres => 8KB, MySQL => 16KB</div></li><li><div>It contains tuples, meta-data, indexes, log records and more.</div></li><li><div>Some systems require the page to be self-contained (all information about the page is inside the page.)</div></li><li><div>Each page is given a unique identifier, the storage manager use this ID to find the page.</div></li><li><div>Different databases manage pages in files on disks in different ways (Heap file, tree file, hashing file)</div><div><br/></div></li><li><div><span style="font-size: 16px;"><span style="color:rgb(25, 25, 25);">Heap File</span></span></div></li><ul><li><div><span style="font-size: 16px;">Unordered collection of pages where tuples stored in random pages</span></div></li><li><div><span style="font-size: 16px;">Need meta-data to know which page have free space and more.</span></div></li><li><div><span style="font-size: 16px;">Two ways to implement => page directory. linked list</span></div></li><ul><li><div><span style="font-size: 16px;">Page directory (good one)</span></div></li><ul><li><div><span style="font-size: 16px;">The DBMS maintains special pages that track the location of each page and a meta-data about each one (ex. number of free slots in each one)</span></div></li><li><div><span style="font-size: 16px;">The DBMS make sure that the directory pages are in sync with data pages.</span></div><div><span style="font-size: 16px;"><span style="--en-markholder:true;"><br/></span></span></div></li></ul><li><div><span style="font-size: 16px;">Linked list</span></div></li><ul><li><div>At the beginning of the file stores two things:</div></li><ul><li><div>Head of the page list</div></li><li><div>Head of the data page list</div></li></ul><li><div>each page keep track the  number of free slots in itself</div><div><br/></div><div><br/></div></li></ul></ul></ul><li><div>Page Header</div></li><ul><li><div>Every page contains a header of meta-data about the page's contents:</div></li><ul><li><div>Page size, checksum, DBMS version and compression information.</div></li></ul><li><div>Some systems require pages to be self-contained (ex. Oracle)</div><div><br/></div><div><br/></div></li></ul><li><div>Page Layout</div></li><ul><li><div>We need to decide how to organise the data inside of the page. Two approaches :</div></li><ul><li><div>Tuple</div></li><li><div>Log structured</div><div><br/></div></li></ul><li><div>Tuple</div></li><ul><li><div>Strawman Idea</div></li><ul><li><div>Keep track of the number of tuples in a page and then just append a new tuple to the end, it depends on that attributes or elements have a fixed size.</div></li><li><div>But what happen if we delete a tuple from the middle for example ?!</div></li><li><div>what happen if we have a variable length attributes ? </div><div><br/></div></li></ul><li><div>Slotted pages</div></li><ul><li><div>The most common layout scheme </div></li><li><div>Header or slot array</div></li><ul><li><div>each element in the array points to the start position of each tuple.</div></li><li><div>keeps track the number of used slots.</div><div><br/></div></li></ul><li><div>What happen if we delete a tuple from the middle for example ?</div></li><ul><li><div>it depends on the implementation</div><div>you may continue as you are and let the gap or shift the elements to remove the gap.</div><div><br/></div></li></ul><li><div>Each tuple have a unique ID, most common (page_id, slot_number)</div><div>but we cannot depends on the ID because if we delete a slot before the ID will not change.</div></li><li><div>ID have different size in different DBMS</div></li><ul><li><div>PostgreSQL ==> CTID(6-Bytes)</div></li><li><div>SQLite  ==> ROWID (8-Bytes)</div><div><br/></div><div><br/></div></li></ul></ul><li><div>Log Structured</div></li><ul><li><div>SOON</div><div><br/></div><div><br/></div><div><br/></div></li></ul></ul><li><div>Tuple Layout</div></li><ul><li><div>A sequence of bytes, DBMS interpret those bytes into value.</div></li><li><div>Each tuple is prefixed with a header contains the tuple meta-date</div></li></ul></ul></ul></ul></en-note>      ]]>
    </content>
  </note>
</en-export>
